if(KSEE_ENABLE_QTHREADS)
  find_package(QTHREADS REQUIRED)
  set(ULT_NAME "QTHREADS")
  set(ULT_BACKEND_DEFINE "KSEE_ENABLE_QTHREADS")
  list(APPEND ULTs ${ULT_NAME})
endif()

if(KSEE_ENABLE_PIKA)
  find_package(PIKA REQUIRED)
  set(ULT_NAME "PIKA")
  set(ULT_BACKEND_DEFINE "KSEE_ENABLE_PIKA")
  list(APPEND ULTs ${ULT_NAME})
endif()

if(KSEE_ENABLE_ARGOBOTS)
   find_package(ARGOBOTS REQUIRED)
   set(ULT_NAME "ARGOBOTS")
   set(ULT_BACKEND_DEFINE "KSEE_ENABLE_ARGOBOTS")
   list(APPEND ULTs ${ULT_NAME})
endif()

list(LENGTH ULTs nULTs)
if (NOT ${nULTs} EQUAL "1")
  message(FATAL_ERROR "Must give a single valid ULT backend. ${nULTs} given.")
endif()

foreach(DIR ${CMAKE_CURRENT_SOURCE_DIR})
  file(GLOB _HEADERS ${DIR}/*.hpp)
  file(GLOB _SOURCES ${DIR}/*.cpp)
  list(APPEND HEADERS ${_HEADERS})
  list(APPEND SOURCES ${_SOURCES})
endforeach()

add_compile_options(-std=c++20)

foreach(SRC_FILE ${SOURCES})
  get_filename_component(SRC_FILE_NAME ${SRC_FILE} NAME)
  string(REGEX REPLACE "\\.[^.]*$" "" SRC_FILE_NAME ${SRC_FILE_NAME})
  add_executable(${SRC_FILE_NAME} ${SRC_FILE} ${HEADERS})
  target_compile_definitions(${SRC_FILE_NAME} PUBLIC KOKKOS_REMOTE_SPACES_ENABLE_DEBUG)
  target_include_directories(${SRC_FILE_NAME} PRIVATE ${HEADER_DIRS} ${ULT_NAME})
  target_link_libraries(${SRC_FILE_NAME} STDEXEC::stdexec ${ULT_NAME})
  target_compile_definitions(${SRC_FILE_NAME} PUBLIC ${ULT_BACKEND_DEFINE})
  message(STATUS "Enabled ULT backend: " ${ULT_NAME})
    if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_definitions(${SRC_FILE_NAME} PUBLIC "DEBUG")
    message(STATUS "CMAKE_BUILD_TYPE=DEBUG")
  endif()
endforeach()